{{- range $name, $customConfig := .Values.simulators }}
{{- $config := merge $customConfig $.Values.defaults }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-sim
  labels:
    # TODO: the labels should be moved into helpers
    app: {{ $name }}
    chart: {{ template "mojaloop-simulator.chart" $ }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ $config.replicaCount }}
  selector:
    matchLabels:
      app: {{ $name }}-sim
      release: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app: {{ $name }}-sim
        release: {{ $.Release.Name }}
    spec:
      containers:
      {{- if $config.config.cache.enabled }}
      - name: {{ $name }}-cache
        image: "{{ $config.config.cache.image.repository }}:{{ $config.config.cache.image.tag }}"
        imagePullPolicy: {{ $config.config.cache.image.pullPolicy }}
        # ports:
        # - name: redis
        #   containerPort: 6379
        #   protocol: TCP
        {{- if $config.config.cache.livenessProbe.enabled }}
        livenessProbe:
          initialDelaySeconds: {{ $config.config.cache.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ $config.config.cache.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ $config.config.cache.livenessProbe.timeoutSeconds }}
          successThreshold: {{ $config.config.cache.livenessProbe.successThreshold }}
          failureThreshold: {{ $config.config.cache.livenessProbe.failureThreshold }}
          exec:
            command:
            - sh
            - -c
            - redis-cli ping {{ $config.config.cache.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if $config.config.cache.readinessProbe.enabled}}
        readinessProbe:
          initialDelaySeconds: {{ $config.config.cache.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ $config.config.cache.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ $config.config.cache.readinessProbe.timeoutSeconds }}
          successThreshold: {{ $config.config.cache.readinessProbe.successThreshold }}
          failureThreshold: {{ $config.config.cache.readinessProbe.failureThreshold }}
          exec:
            command:
            - sh
            - -c
            - redis-cli ping {{ $config.config.cache.livenessProbe.timeoutSeconds }}
        {{- end }}
        resources:
{{ toYaml $config.config.cache.resources | indent 12 }}
      {{- end }}
      - name: {{ $name }}-sim-backend
        image: "{{ $config.config.simBackend.image.repository }}:{{ $config.config.simBackend.image.tag }}"
        imagePullPolicy: {{ $config.config.simBackend.image.pullPolicy }}
        ports:
          - name: simapi
            containerPort: 3000
            protocol: TCP
          - name: reportapi
            containerPort: 3002
            protocol: TCP
          - name: testapi
            containerPort: 3003
            protocol: TCP
        {{- if $config.config.simBackend.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: {{ $config.config.simBackend.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ $config.config.simBackend.readinessProbe.periodSeconds }}
        {{- end }}
        {{- if $config.config.simBackend.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
          initialDelaySeconds: {{ $config.config.simBackend.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ $config.config.simBackend.livenessProbe.periodSeconds }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $name }}-sim-backend
        resources:
{{ toYaml $config.config.simBackend.resources | indent 12 }}
      - name: {{ $name }}-sim-scheme-adapter
        image: "{{ $config.config.schemeAdapter.image.repository }}:{{ $config.config.schemeAdapter.image.tag }}"
        imagePullPolicy: {{ $config.config.schemeAdapter.image.pullPolicy }}
        ports:
          - name: inboundapi
            containerPort: 4000
            protocol: TCP
          - name: outboundapi
            containerPort: 4001
            protocol: TCP
        {{- if $config.config.schemeAdapter.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
          initialDelaySeconds: {{ $config.config.schemeAdapter.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ $config.config.schemeAdapter.readinessProbe.periodSeconds }}
        {{- end }}
        {{- if $config.config.schemeAdapter.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: /
            port: 4001
            scheme: HTTP
          initialDelaySeconds: {{ $config.config.schemeAdapter.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ $config.config.schemeAdapter.livenessProbe.periodSeconds }}
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ $name }}-sim-scheme-adapter
          resources:
{{ toYaml $config.config.schemeAdapter.resources | indent 12 }}
      imagePullSecrets:
        - name: {{ $config.config.imagePullSecretName }}
    {{- with $config.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $config.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with $config.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
---
{{ end }}
